using System;
using System.IO;
using NUnit.Framework;

namespace HauntedSoft.MsBuild.Test
{
    [TestFixture]
    public class Svn2AssemblyInfoTest
    {
        [Test]
        public void Replace1()
        {
            const string svnInfo = "Test Key : Test Val\nKey2: Value 2 \n ";
            const string template = "Some text where $Test Key$ and $Key2$ replaced";
            var tags = Svn2AssemblyInfo.BuildTags(svnInfo);
            tags.Keys.AssertContainsOnly("$Test Key$", "$Key2$");
            tags.Values.AssertContainsOnly("Test Val", "Value 2");
            var result = Svn2AssemblyInfo.GenerateFileContent(tags, template);
            Assert.AreEqual("Some text where Test Val and Value 2 replaced", result);
        }

        [Test]
        public void ReplaceSampleGitSvn()
        {
            var svnInfo = File.ReadAllText(@"SampleData\GitSvnSample.txt");
            var tags = Svn2AssemblyInfo.BuildTags(svnInfo);
            tags.Keys.AssertContainsOnly("$WCREV$", "$WCURL$", "$WCROOT$", "$WCUUID$", "$WCREPOREV$", "$WCAUTHOR$", "$WCDATE$", "$Path$", "$Node Kind$", "$Schedule$");
            var result = Svn2AssemblyInfo.GenerateFileContent(tags, File.ReadAllText(@"SampleData\AssemblyInfo.cs.in"));
            Assert.AreEqual(expectedGitSvn, result);
        }

        [Test]
        public void ReplaceSampleSvnRus()
        {
            var svnInfo = File.ReadAllText(@"SampleData\SvnSampleRus.txt");
            var tags = Svn2AssemblyInfo.BuildTags(svnInfo);
            tags.Keys.AssertContainsOnly("$WCREV$", "$WCURL$", "$WCROOT$", "$WCUUID$", "$WCREPOREV$", "$WCAUTHOR$", "$WCDATE$", "$Relative URL$", "$Вид узла$", "$Задано$", "$Путь к корню рабочей копии$");
            var result = Svn2AssemblyInfo.GenerateFileContent(tags, File.ReadAllText(@"SampleData\AssemblyInfo.cs.in"));
            Assert.AreEqual(expectedSvnRus, result);
        }

        [Test, Ignore("You can manually run on your own repository")]
        public void RealRepositoryTest()
        {
            var expectedFile = new FileInfo("AssemblyInfo.cs.out").FullName;
            if (File.Exists(expectedFile))
                File.Delete(expectedFile);
            Assert.False(File.Exists(expectedFile));
            var task = new Svn2AssemblyInfo(Console.WriteLine)
            {
                TemplateFile = new FileInfo(@"SampleData\AssemblyInfo.cs.in").FullName,
                OutputFile = expectedFile,
                Silent = false,
                ProjectDir = @"V:\Projects\alien\achartengine-svn"
            };
            task.Execute();
            Assert.True(File.Exists(expectedFile));
        }

        static readonly string expectedGitSvn = @"// <auto-generated />

using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

[assembly: AssemblyTitle( 'Библиотека компонентов ядра ПК Энергосфера' )]
[assembly: AssemblyDescription('<sign>\r\n <src>\r\n  <bts>$KEY$</bts>\r\n  <rev>6483$WCMODS?m:$</rev>\r\n  <wcr>svn://scm-srv/Project/trunk/</wcr>\r\n </src>\r\n <built>\r\n  <by>$USERNAME$</by>\r\n  <at>$COMPUTERNAME$</at>\r\n  <stamp>$DATETIME$</stamp>\r\n </built>\r\n</sign>')]
[assembly: AssemblyConfiguration('')]
[assembly: AssemblyCompany('ПРОСОФТ-СИСТЕМЫ, Екатеринбург')]
[assembly: AssemblyProduct( 'Веб-сервер ПК Энергосфера' )]
[assembly: AssemblyCopyright('© ProSoft-Systems')]
[assembly: AssemblyTrademark('Энергосфера ® (свид. Роспатента №346965)')]
[assembly: AssemblyCulture('')]

[assembly: CLSCompliant(false)]

[assembly: ComVisible( false )]

[assembly: Guid( 'b91b41b7-8b2a-44a7-a69a-7bdfdef5a975' )]

[assembly: AssemblyVersion('$MAJOR$.$MINOR$.$SUBMINOR$.6483')]
[assembly: AssemblyFileVersion('$MAJOR$.$MINOR$.$SUBMINOR$.6483')]
[assembly: InternalsVisibleTo( 'EnergoSphere.TestInfrastructure, PublicKey=00240000048000009400000006020000002400005253413100040000010001001b1164488e8f46904e5dd97d0b2ea9be9061f4a22cc7dd154b7c8c6a8c99589888c9da1d69127c7277f8c53412e317e8c3842661d213acd255efc7cd76861dc32fcd06c31043c64ca69fdbed14014d5cb582dbe096fe065fb952d8cad90ad9a69fbc451dc33de14f86655fec2a451458d5c16c27613a43abf2c2de3a79fc81a5' )]
[assembly: InternalsVisibleTo( 'EnergoSphere.UnitTests, PublicKey=00240000048000009400000006020000002400005253413100040000010001001b1164488e8f46904e5dd97d0b2ea9be9061f4a22cc7dd154b7c8c6a8c99589888c9da1d69127c7277f8c53412e317e8c3842661d213acd255efc7cd76861dc32fcd06c31043c64ca69fdbed14014d5cb582dbe096fe065fb952d8cad90ad9a69fbc451dc33de14f86655fec2a451458d5c16c27613a43abf2c2de3a79fc81a5' )]
[assembly: InternalsVisibleTo( 'EnergoSphere.PersistenceTests, PublicKey=00240000048000009400000006020000002400005253413100040000010001001b1164488e8f46904e5dd97d0b2ea9be9061f4a22cc7dd154b7c8c6a8c99589888c9da1d69127c7277f8c53412e317e8c3842661d213acd255efc7cd76861dc32fcd06c31043c64ca69fdbed14014d5cb582dbe096fe065fb952d8cad90ad9a69fbc451dc33de14f86655fec2a451458d5c16c27613a43abf2c2de3a79fc81a5' )]
[assembly:InternalsVisibleTo( 'EnergoSphere.WebClient.Tests, PublicKey=00240000048000009400000006020000002400005253413100040000010001001b1164488e8f46904e5dd97d0b2ea9be9061f4a22cc7dd154b7c8c6a8c99589888c9da1d69127c7277f8c53412e317e8c3842661d213acd255efc7cd76861dc32fcd06c31043c64ca69fdbed14014d5cb582dbe096fe065fb952d8cad90ad9a69fbc451dc33de14f86655fec2a451458d5c16c27613a43abf2c2de3a79fc81a5')]
".Replace('\'', '"');

        static readonly string expectedSvnRus = @"// <auto-generated />

using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

[assembly: AssemblyTitle( 'Библиотека компонентов ядра ПК Энергосфера' )]
[assembly: AssemblyDescription('<sign>\r\n <src>\r\n  <bts>$KEY$</bts>\r\n  <rev>540$WCMODS?m:$</rev>\r\n  <wcr>http://project.googlecode.com/svn/trunk</wcr>\r\n </src>\r\n <built>\r\n  <by>$USERNAME$</by>\r\n  <at>$COMPUTERNAME$</at>\r\n  <stamp>$DATETIME$</stamp>\r\n </built>\r\n</sign>')]
[assembly: AssemblyConfiguration('')]
[assembly: AssemblyCompany('ПРОСОФТ-СИСТЕМЫ, Екатеринбург')]
[assembly: AssemblyProduct( 'Веб-сервер ПК Энергосфера' )]
[assembly: AssemblyCopyright('© ProSoft-Systems')]
[assembly: AssemblyTrademark('Энергосфера ® (свид. Роспатента №346965)')]
[assembly: AssemblyCulture('')]

[assembly: CLSCompliant(false)]

[assembly: ComVisible( false )]

[assembly: Guid( 'b91b41b7-8b2a-44a7-a69a-7bdfdef5a975' )]

[assembly: AssemblyVersion('$MAJOR$.$MINOR$.$SUBMINOR$.540')]
[assembly: AssemblyFileVersion('$MAJOR$.$MINOR$.$SUBMINOR$.540')]
[assembly: InternalsVisibleTo( 'EnergoSphere.TestInfrastructure, PublicKey=00240000048000009400000006020000002400005253413100040000010001001b1164488e8f46904e5dd97d0b2ea9be9061f4a22cc7dd154b7c8c6a8c99589888c9da1d69127c7277f8c53412e317e8c3842661d213acd255efc7cd76861dc32fcd06c31043c64ca69fdbed14014d5cb582dbe096fe065fb952d8cad90ad9a69fbc451dc33de14f86655fec2a451458d5c16c27613a43abf2c2de3a79fc81a5' )]
[assembly: InternalsVisibleTo( 'EnergoSphere.UnitTests, PublicKey=00240000048000009400000006020000002400005253413100040000010001001b1164488e8f46904e5dd97d0b2ea9be9061f4a22cc7dd154b7c8c6a8c99589888c9da1d69127c7277f8c53412e317e8c3842661d213acd255efc7cd76861dc32fcd06c31043c64ca69fdbed14014d5cb582dbe096fe065fb952d8cad90ad9a69fbc451dc33de14f86655fec2a451458d5c16c27613a43abf2c2de3a79fc81a5' )]
[assembly: InternalsVisibleTo( 'EnergoSphere.PersistenceTests, PublicKey=00240000048000009400000006020000002400005253413100040000010001001b1164488e8f46904e5dd97d0b2ea9be9061f4a22cc7dd154b7c8c6a8c99589888c9da1d69127c7277f8c53412e317e8c3842661d213acd255efc7cd76861dc32fcd06c31043c64ca69fdbed14014d5cb582dbe096fe065fb952d8cad90ad9a69fbc451dc33de14f86655fec2a451458d5c16c27613a43abf2c2de3a79fc81a5' )]
[assembly:InternalsVisibleTo( 'EnergoSphere.WebClient.Tests, PublicKey=00240000048000009400000006020000002400005253413100040000010001001b1164488e8f46904e5dd97d0b2ea9be9061f4a22cc7dd154b7c8c6a8c99589888c9da1d69127c7277f8c53412e317e8c3842661d213acd255efc7cd76861dc32fcd06c31043c64ca69fdbed14014d5cb582dbe096fe065fb952d8cad90ad9a69fbc451dc33de14f86655fec2a451458d5c16c27613a43abf2c2de3a79fc81a5')]
".Replace('\'', '"');
    }
}
